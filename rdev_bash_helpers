#!/bin/bash

#######################################
# Wrapper method for `rdev` to cache names of rdev instances
# Arguments:
#   same as native `rdev` commands
#######################################
xdev() {
  if [ "$1" == "create" ]; then
    echo "rdev create wrapper"
    rdev $@
    xdev "refresh"
  elif [ "$1" == "delete" ]; then
    echo "rdev delete wrapper"
    rdev $0
    rdev refresh
  elif [ "$1" == "refresh" ]; then
    confirmRdevCache
    rdev ls > ~/.rdevLsCache
    echo "New cache is set as:"
    cat ~/.rdevLsCache
  elif [ "$1" == "ls" ]; then
    confirmRdevCache
    echo "Dislaying cached rdev instances:"
    cat ~/.rdevLsCache
  else
    rdev $@
  fi
}

#######################################
# Filter rdev results and call connect()
# Arguments:
#  none
#######################################
fconnect() {
  if ! command -v fzf &> /dev/null;  then
    echo "fzf could not be found. Maybe it's not installed?"
  else
    confirmRdevCache
    connect $(cat ~/.rdevLsCache | grep RUNNING | awk '{print $1}' | fzf ) ${1}
  fi
}

#######################################
# Connect to an rdev host with vscode then ssh into the host
# Arguments:
#   host: name of rdev host to connect to
#   flag: "-c" or "-s" to only trigger vs code or start the basic session
#######################################
connect() {
  if [ -z $1 ]; then
    echo "name of host must be given as the one and only argument to this function"
  elif [ "-c" == $2 ]; then
    echo "Connecting to host: $1"
    echo "starting VS Code..."
    rdev code $1
  elif [ "-s" == $2 ]; then
    echo "starting ssh session and CD'ing to the ${1%%/*} dir..."
    ssh -t $1 "cd ${1%%/*}; bash -l"
  else
    echo "Connecting to host: $1"
    echo "starting VS Code..."
    rdev code $1
    echo "starting ssh session and CD'ing to the ${1%%/*} dir..."
    ssh -t $1 "cd ${1%%/*}; bash -l"
  fi
}

#######################################
# Check if rdev cache file exists and create one if it does not
# Arguments:
#   none
#######################################
confirmRdevCache() {
  FILE=~/.rdevLsCache
  if [ ! -f "$FILE" ]; then
    echo "$FILE does not exist. Creating and populating it now..."
    rdev ls > ~/.rdevLsCache
  fi
}
