filetype plugin indent on
syntax on
set visualbell
set number relativenumber
set ruler
set encoding=utf-8
set textwidth=79
set nowrap
set formatoptions-=t
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab
set noshiftround
set backspace=indent,eol,start
set incsearch
set ignorecase
set smartcase
set hlsearch
hi Search cterm=NONE ctermfg=grey ctermbg=blue

" add underline for when in insert mode
:autocmd InsertEnter,InsertLeave * set cul!

" Key-mappings:
" ***************************************************
" Toggle NERDTree: <leader>t
nmap <leader>t :NERDTreeToggle<CR>
" Toggle line numbering styles: regular, relative, relative plus, none
nmap <leader>l :exec &nu==&rnu? "se nu!" : "se rnu!"<CR>
" Edit this config
nmap <leader>e :vsp $MYVIMRC<CR>
" Go to previous file edited in buffer
nmap <leader>b :b#<CR>
" Clear search highlighting
nnoremap <silent> <leader>\ :nohlsearch <cr>
" Toggle quickfix window: <leader>q
:nnoremap <leader>q :call QuickfixToggle()<cr>
" Quicklist navigation
:map <C-j> :cn<CR>
:map <C-k> :cp<CR>
" FZF: file find
nnoremap <silent> <C-f> :Files<CR> 
" FZF: ripgrep -> FZF phrase find
nnoremap <silent> <Leader>f :Rg<CR>
" FZF: git commit search
nnoremap <silent> <Leader>g :Commits<CR>


" ***************************************************
" Notes on how to do common actions
" ***************************************************

" NERDTree commands:
" t: Open the selected file in a new tab
" i: Open the selected file in a horizontal split window
" s: Open the selected file in a vertical split window
" I: Toggle hidden files
" m: Show the NERD Tree menu
" R: Refresh the tree, useful if files change outside of Vim
" ?: Toggle NERD Tree's quick help
"
" How to tab:
" ***************************************************
" next tab: gt
" prior tab: gT
" numbered tab: nnngt
"
" More:
" ***************************************************
" ctrl - ww: navigate across split views (NerdTree is considered one of those views)
" :b fileName  - open file from buffer
" :b# - go to previous open file
" ctrl-z - suspend vim (access the suspended job with 'fg', view jobs with 'jobs' )

" ***************************************************
" Helper methods and other configs beyond simple `set`s and basic key mappings
" ***************************************************

" Quicklist toggle helper 
let g:quickfix_is_open = 0
function! QuickfixToggle()
    if g:quickfix_is_open
        cclose
        let g:quickfix_is_open = 0
        execute g:quickfix_return_to_window . "wincmd w"
    else
        let g:quickfix_return_to_window = winnr()
        copen
        let g:quickfix_is_open = 1
    endif
endfunction


" FZF configs
" ***************************************************
" https://github.com/junegunn/fzf.vim
" https://dev.to/iggredible/how-to-search-faster-in-vim-with-fzf-vim-36ko
packadd! fzf
packadd! fzf.vim
set rtp+=/usr/local/opt/fzf
" config FZF to exclude file names from file name from the phrase match search (ripgrep)
" since we are searching for file name via <C-f>
command! -bang -nargs=* Rg call fzf#vim#grep("rg --column --line-number --no-heading --color=always --smart-case ".shellescape(<q-args>), 1, {'options': '--delimiter : --nth 4..'}, <bang>0)

